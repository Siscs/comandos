apiVersion: apps/v1
kind: Deployment
metadata:
  name: pos-api-private-staging
  namespace: pos
  labels: {name: pos-api-private-staging, env: staging}
  annotations: null
spec:
  replicas: 1
  selector:
    matchLabels: {app: pos-api-private-staging, env: staging}
  template:
    metadata:
      name: pos-api-private-staging
      labels: {app: pos-api-private-staging, env: staging}
    spec:
      containers:
      - name: pos-api-private-staging
        image: gcr.io/dotz-dev-219021/next/pos-api-private:2.0.46-master
        volumeMounts:
        - {name: secret-volume, mountPath: /app/secrets}
        imagePullPolicy: Always
        resources:
          requests: {memory: 512Mi, cpu: 200m}
          limits: {memory: 3G, cpu: '1'}
        ports:
        - {name: http, containerPort: 80}
        - {name: https, containerPort: 443}
        livenessProbe:
          httpGet: {path: /liveness, port: 80}
          initialDelaySeconds: 120
          timeoutSeconds: 120
        readinessProbe:
          httpGet: {path: /liveness, port: 80}
          periodSeconds: 60
          timeoutSeconds: 120
          successThreshold: 1
          failureThreshold: 10
        env:
        - {name: TZ, value: America/Sao_Paulo}
        - name: POD_ID
          valueFrom:
            fieldRef: {fieldPath: metadata.uid}
        - name: POD_NAME
          valueFrom:
            fieldRef: {fieldPath: metadata.name}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef: {fieldPath: metadata.namespace}
        - name: POD_NODE
          valueFrom:
            fieldRef: {fieldPath: spec.nodeName}
        - name: JKS_ENV
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_ENV}
        - name: JWT_JWKS_PATH
          valueFrom:
            secretKeyRef: {name: pos, key: JWT_JWKS_PATH}
        - name: JKS_SQL_LEGACY_CONN_STR
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_SQL_LEGACY_CONN_STR}
        - name: JKS_BASE_PATH
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_BASE_PATH}
        - name: MONITORING_SPONSORID
          valueFrom:
            secretKeyRef: {name: pos, key: MONITORING_SPONSORID}
        - name: MONITORING_BASECREDITMAXINTERVAL
          valueFrom:
            secretKeyRef: {name: pos, key: MONITORING_BASECREDITMAXINTERVAL}
        - name: JKS_REDIS_HOST
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_REDIS_HOST}
        - name: JKS_REDIS_PORT
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_REDIS_PORT}
        - name: JKS_REDIS_DB
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_REDIS_DB}
        - name: JKS_REDIS_SSL
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_REDIS_SSL}
        - name: ELASTIC_APM_SERVER_URLS
          valueFrom:
            secretKeyRef: {name: pos, key: ELASTIC_APM_SERVER_URLS}
        - name: ELASTIC_APM_SECRET_TOKEN
          valueFrom:
            secretKeyRef: {name: pos, key: ELASTIC_APM_SECRET_TOKEN}
        - name: ELASTIC_APM_LOG_FILE
          valueFrom:
            secretKeyRef: {name: pos, key: ELASTIC_APM_LOG_FILE}
        - name: ELASTIC_APM_LOG_LEVEL
          valueFrom:
            secretKeyRef: {name: pos, key: ELASTIC_APM_LOG_LEVEL}
        - name: ELASTIC_APM_SERVICE_NAME
          valueFrom:
            secretKeyRef: {name: pos, key: ELASTIC_APM_SERVICE_NAME}
        - name: PRIORITY_THRESHOLD
          valueFrom:
            secretKeyRef: {name: pos, key: PRIORITY_THRESHOLD}
        - name: SHOW_CREDIT_ONLY
          valueFrom:
            secretKeyRef: {name: pos, key: SHOW_CREDIT_ONLY}
        - name: FTP_HOST
          valueFrom:
            secretKeyRef: {name: pos, key: FTP_HOST}
        - name: FTP_PASSWORD
          valueFrom:
            secretKeyRef: {name: pos, key: FTP_PASSWORD}
        - name: FTP_USER
          valueFrom:
            secretKeyRef: {name: pos, key: FTP_USER}
        - name: FTP_PORT
          valueFrom:
            secretKeyRef: {name: pos, key: FTP_PORT}
        - name: FTP_FOLDER
          valueFrom:
            secretKeyRef: {name: pos, key: FTP_FOLDER}
        - name: DOTZ_DBS_HOST
          valueFrom:
            secretKeyRef: {name: pos, key: DOTZ_DBS_HOST}
        - name: DOTZ_DBS_DOMAIN
          valueFrom:
            secretKeyRef: {name: pos, key: DOTZ_DBS_DOMAIN}
        - name: DOTZ_DBS_USER
          valueFrom:
            secretKeyRef: {name: pos, key: DOTZ_DBS_USER}
        - name: DOTZ_DBS_PWD
          valueFrom:
            secretKeyRef: {name: pos, key: DOTZ_DBS_PWD}
        - name: DOC_PATH
          valueFrom:
            secretKeyRef: {name: pos, key: DOC_PATH}
        - name: POS_MYSQL_CONN_STR
          valueFrom:
            secretKeyRef: {name: pos, key: POS_MYSQL_CONN_STR}
        - name: AGREEMENTS_MYSQL_CONN_STR
          valueFrom:
            secretKeyRef: {name: pos, key: AGREEMENTS_MYSQL_CONN_STR}
        - name: JKS_MYSQL_CONN_STR
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_MYSQL_CONN_STR}
        - name: JKS_WORKER_BILLING_SLEEPTIME
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_WORKER_BILLING_SLEEPTIME}
        - name: JKS_WORKER_BILLING_LIMIT
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_WORKER_BILLING_LIMIT}
        - name: JKS_WORKER_BILLING_THREADS
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_WORKER_BILLING_THREADS}
        - name: UNIT_TESTS_AUTH_USER_ID
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_USER_ID}
        - name: UNIT_TESTS_AUTH_SPONSOR_ID
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_SPONSOR_ID}
        - name: UNIT_TESTS_AUTH_CLIENT_DOCUMENT
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_CLIENT_DOCUMENT}
        - name: UNIT_TESTS_AUTH_CLIENT_REDEEM_ORIGIN
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_CLIENT_REDEEM_ORIGIN}
        - name: UNIT_TESTS_AUTH_CLIENT_LOCATIONID
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_CLIENT_LOCATIONID}
        - name: UNIT_TESTS_AUTH_CLIENT_APPLICATION_LEGACY_ID
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_CLIENT_APPLICATION_LEGACY_ID}
        - name: UNIT_TESTS_AUTH_CLIENT_ACCOUNT_LEGACY_ID
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TESTS_AUTH_CLIENT_ACCOUNT_LEGACY_ID}
        - name: UNIT_TEST_AUTH_CLIENT_STORECODE
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TEST_AUTH_CLIENT_STORECODE}
        - name: UNIT_TEST_AUTH_CLIENT_OFFERCODE
          valueFrom:
            secretKeyRef: {name: pos, key: UNIT_TEST_AUTH_CLIENT_OFFERCODE}
        - name: JKS_MONGODB_URL
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_MONGODB_URL}
        - name: JKS_MONGODB_DATABASENAME
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_MONGODB_DATABASENAME}
        - name: JKS_CONSUMER_THREADS
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_CONSUMER_THREADS}
        - name: JKS_USE_NEWRELIC_LOG
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_USE_NEWRELIC_LOG}
        - name: WORKER_MIGRATION_START
          valueFrom:
            secretKeyRef: {name: pos, key: WORKER_MIGRATION_START}
        - name: WORKER_MIGRATION_END
          valueFrom:
            secretKeyRef: {name: pos, key: WORKER_MIGRATION_END}
        - name: POS_DEFAULT_CACHE_TIME
          valueFrom:
            secretKeyRef: {name: pos, key: POS_DEFAULT_CACHE_TIME}
        - name: JKS_SAFE_IPS
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_SAFE_IPS}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          valueFrom:
            secretKeyRef: {name: pos, key: GOOGLE_APPLICATION_CREDENTIALS}
        - name: JKS_GOOGLE_PROJECTID
          valueFrom:
            secretKeyRef: {name: pos, key: JKS_GOOGLE_PROJECTID}
      volumes:
      - name: secret-volume
        secret: {secretName: pos-service-account}
      nodeSelector: {type: temporarios}
      


kubectl apply -f deployment-staging.yaml